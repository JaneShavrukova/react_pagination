{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","isFirstPageSelected","isLastPageSelected","getClassName","condition","cn","disabled","className","href","onClick","map","page","active","event","preventDefault","ITEMS_PER_PAGE_OPTIONS","App","useState","setPerPage","setCurrentPage","items","length","fromPage","toPage","visibleItems","slice","id","value","onChange","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YAEI,IADJC,oBACI,MADW,aACX,EACEC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAsC,IAAhBL,EACtBM,EAAqBN,IAAgBE,EAErCK,EAAe,SAACC,GAAD,OAAwBC,IAAG,YAC9C,CAAEC,SAAUF,KAEd,OACE,qBAAIG,UAAU,aAAd,UACE,oBAAIA,UAAWJ,EAAaF,GAA5B,SACE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAOR,GAAuBJ,EAAaD,EAAc,IALpE,oBAWDT,EAAW,EAAGW,GAAOY,KAAI,SAAAC,GAAI,OAC5B,oBAEEJ,UAAWF,IAAG,YACZ,CAAEO,OAAQD,IAASf,IAHvB,SAKE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,SAACI,GACRA,EAAMC,iBACNjB,EAAac,IANjB,SASGA,KAbEA,MAkBT,oBAAIJ,UAAWJ,EAAaD,GAA5B,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAOP,GACXL,EAAaD,EAAc,IANlC,wBCrDFmB,EAAyB,CAAC,EAAG,EAAG,GAAI,IAI7BC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KAOMC,EAXiCjC,EAAW,EAWtB,IAXgCuB,KAAI,SAACnB,GAAD,qBAAeA,MAYzEG,EAAQ0B,EAAMC,OACdC,GAAY1B,EAAc,GAAKD,EAC/B4B,EAAS3B,EAAcD,EAAUD,EAAQA,EAC3CE,EAAcD,EACZ6B,EAAeJ,EAAMK,MAAMH,EAAUC,GAE3C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC0B,EAAW,EAD5C,cACmDC,EADnD,eACgE7B,EADhE,OAIA,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAOhC,EACPiC,SA3BY,SAACf,GACrBK,GAAYL,EAAMgB,OAAOF,OACzBR,EAAe,IAoBT,SAOGJ,EAAuBL,KAAI,SAAAoB,GAAM,OAChC,wBAAQH,MAAOG,EAAf,SAAqCA,GAATA,UAKlC,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcsB,IAGhB,6BACGK,EAAad,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d909ff2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => { },\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const isFirstPageSelected = currentPage === 1;\n  const isLastPageSelected = currentPage === pages;\n\n  const getClassName = (condition: boolean) => cn('page-item',\n    { disabled: condition });\n\n  return (\n    <ul className=\"pagination\">\n      <li className={getClassName(isFirstPageSelected)}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPageSelected}\n          onClick={() => !isFirstPageSelected && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, pages).map(page => (\n        <li\n          key={page}\n          className={cn('page-item',\n            { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => {\n              event.preventDefault();\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={getClassName(isLastPageSelected)}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPageSelected}\n          onClick={() => !isLastPageSelected\n            && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst ITEMS_PER_PAGE_OPTIONS = [3, 5, 10, 20];\n\nconst generateItems = (count: number) => getNumbers(1, count).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const items = generateItems(42);\n  const total = items.length;\n  const fromPage = (currentPage - 1) * perPage;\n  const toPage = currentPage * perPage > total ? total\n    : currentPage * perPage;\n  const visibleItems = items.slice(fromPage, toPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromPage + 1} - ${toPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            {ITEMS_PER_PAGE_OPTIONS.map(option => (\n              <option value={option} key={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}